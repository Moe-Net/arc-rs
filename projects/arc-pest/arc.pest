program = _{SOI ~ statement* ~ EOI}
statement = _{
    SEPARATOR
  | EmptyLine{1,}
//| include_statement
  | dict_literal
  | dict_scope
  | dict_pair
  | list_scope
}
EmptyLine  = @{WHITESPACE* ~ NEWLINE}
RestOfLine = @{(!NEWLINE ~ ANY)*}
/*====================================================================================================================*/
//!#C678DD: include_statement|import_statement
include_statement = {
    "@include" ~ "(" ~ StringNormal ~ ("," ~ SYMBOL) ~ ")"
//| "@import" ~ "(" ~ SYMBOL ~ StringNormal ~ ")"
}
import_statement = {
    "@import" ~ "(" ~ StringNormal ~ ("," ~ SYMBOL) ~ ")"
//| "@import" ~ "(" ~ SYMBOL ~ StringNormal ~ ")"
}
/*====================================================================================================================*/
dict_scope = {dict_head ~ (SEPARATOR? ~ dict_pair)*}
dict_head  = {"{" ~ Dot* ~ namespace ~ "}"}
dict_pair  = {namespace ~ Set ~ data}
/*====================================================================================================================*/
list_scope = {list_head ~ (SEPARATOR? ~ list_pair)*}
list_head  = {"[" ~ Dot* ~ namespace ~ "]"}
list_pair  = {
    Insert ~ dict_pair+
  | Append ~ data+
}
Insert = @{"*"}
Append = @{"&"}
/*====================================================================================================================*/
dict_literal = {
    "{" ~ "}"
  | "{" ~ (SEPARATOR? ~ dict_pair)+ ~ SEPARATOR? ~ "}"
}
list_literal = {
    "[" ~ "]"
  | "[" ~ (SEPARATOR? ~ data)+ ~ SEPARATOR? ~ "]"
}
/*====================================================================================================================*/
data = {
    Byte|Number|Special|String
  | cite_value|dict_literal|list_literal
  | import_statement
  | InlineString
}
/*====================================================================================================================*/
///#D19A66: Null|Unit
Special = @{"true"|"false"|"null"}
/*====================================================================================================================*/
///#56B6C2
cite_value = @{"$" ~ namespace}
/*====================================================================================================================*/
///#D19A66
Byte     = ${(Byte_BIN|Byte_OCT|Byte_HEX)~ (Underline ~ SYMBOL)?}
Byte_BIN = @{"0" ~ ("b"|"B") ~ ASCII_BIN_DIGIT+}
Byte_OCT = @{"0" ~ ("o"|"O") ~ ASCII_OCT_DIGIT+}
Byte_HEX = @{"0" ~ ("x"|"X") ~ ASCII_HEX_DIGIT+}
/*====================================================================================================================*/
//!#D19A66: SignedNumber
Number       = ${(Exponent|SignedNumber) ~ SYMBOL?}
SignedNumber = ${Sign? ~ (Decimal|DecimalBad|Integer)}
Decimal      = ${Integer ~ Dot ~ (Underline? ~ ASCII_DIGIT)*}
DecimalBad   = ${Integer ~ Dot|Dot ~ (Underline? ~ ASCII_DIGIT)*}
Integer      = @{"0"|ASCII_NONZERO_DIGIT ~ (Underline? ~ ASCII_DIGIT)*}
Exponent     = ${SignedNumber ~ ("e"|"E"|"**") ~ Sign? ~ ASCII_DIGIT+}
/*====================================================================================================================*/
//!#3C963C: String|InlineString|RestLineText
//!#98C379: StringQuotation|StringAccent
//!#D19A66: StringApostrophe
String        = !{SYMBOL? ~ StringNormal}
StringNormal  =  {
    Quotation ~ StringQuotation ~ Quotation
  | Apostrophe ~ StringApostrophe ~ Apostrophe
}
StringApostrophe =  {(Escape ~ ANY|!Apostrophe ~ ANY)*}
StringQuotation  =  {(Escape ~ ANY|!Quotation ~ ANY)*}

InlineString = @{(!(SEPARATOR|NEWLINE|"]"|"}") ~ ANY)+}
RestLineText = @{(!NEWLINE ~ ANY)+}

Apostrophe = @{"'"}
Quotation  = @{"\""}
/*====================================================================================================================*/
///#61AFEF
namespace =  {Key ~ (Dot ~ Key)*}
Key       =  {StringNormal|SYMBOL|Integer}
SYMBOL    = @{(XID_START|ExtraID) ~ (XID_CONTINUE|ExtraID)*}
ExtraID   = @{"_"}
// ExtraID   = @{"_"|"/"}
/*====================================================================================================================*/
// NEWLINE = @{"\r" ~ "\n"|"\r"|"\n"}

///Gray
COMMENT          =  {MultiLineComment|LineComment}
WHITESPACE       =  {NEWLINE|SPACE_SEPARATOR|"\t"}
LineComment      = ${"//" ~ RestOfLine}
MultiLineComment = ${"/*" ~ (MultiLineComment | !"*/" ~ ANY)* ~ "*/"}


Dot       = @{"."}
Escape    = @{"\\"}
Underline = @{"_"}
SEPARATOR = @{","|";"}
Set       = @{"="|":"}
Sign      = @{"+"|"-"}
